generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id                String          @id @default(uuid())
  chatId            String          @unique
  companyName       String
  isActive          Boolean         @default(true)
  subscriptionEnd   DateTime?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  contactEmail      String?
  contactName       String?
  contactPhone      String?
  isApproved        Boolean         @default(false)
  notes             String?
  registrationToken String?         @unique
  fuels             Fuel[]
  settings          TenantSettings?
  units             Unit[]
}

model TenantSettings {
  id                String   @id @default(uuid())
  tenantId          String   @unique
  currency          String   @default("MXN")
  timezone          String   @default("America/Mexico_City")
  allowPhotoSkip    Boolean  @default(true)
  requireSaleNumber Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  tenant            Tenant   @relation(fields: [tenantId], references: [id])
}

model Unit {
  id           String   @id @default(uuid())
  tenantId     String
  operatorName String
  unitNumber   String
  buttonId     String
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  fuels        Fuel[]
  tenant       Tenant   @relation(fields: [tenantId], references: [id])

  @@unique([tenantId, buttonId])
  @@index([tenantId, operatorName])
}

model Fuel {
  id            String        @id @default(uuid())
  tenantId      String
  unitId        String
  liters        Decimal       @db.Decimal(10, 2)
  amount        Decimal       @db.Decimal(10, 2)
  fuelType      FuelType
  saleNumber    String?
  paymentStatus PaymentStatus @default(NO_PAGADA)
  paymentDate   DateTime?
  ticketPhoto   String?
  recordDate    DateTime      @default(now())
  operatorName  String
  unitNumber    String
  isActive      Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  tenant        Tenant        @relation(fields: [tenantId], references: [id])
  unit          Unit          @relation(fields: [unitId], references: [id])

  @@index([tenantId, paymentStatus])
  @@index([tenantId, recordDate])
  @@index([tenantId, saleNumber])
}

model RegistrationRequest {
  id                String             @id
  companyName       String
  contactName       String
  contactPhone      String?
  contactEmail      String?
  requesterId       String
  requesterUsername String?
  status            RegistrationStatus @default(PENDING)
  adminNotes        String?
  processedBy       String?
  processedAt       DateTime?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime
}

enum FuelType {
  GAS
  GASOLINA
}

enum PaymentStatus {
  PAGADA
  NO_PAGADA
}

enum RegistrationStatus {
  PENDING
  APPROVED
  REJECTED
}
